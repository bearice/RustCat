name: Rust Build and Test

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
  release:
    types: [created, edited]

jobs:
  #run build first to populate caches
  build:
    name: Build binary
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --all-targets --all-features --release
      - name: Check for release
        id: is-release
        shell: bash
        run: |
          unset IS_RELEASE ; if [[ $GITHUB_REF =~ ^refs/tags/v[0-9].* ]]; then IS_RELEASE='true' ; fi
          echo ::set-output name=IS_RELEASE::${IS_RELEASE}
      - name: Artifact Hash
        id: package
        shell: bash
        run: |
          md5sum target/release/rust_cat.exe >> hashes.txt
          sha256sum target/release/rust_cat.exe >> hashes.txt
          cat hashes.txt
      - name: Artifact upload
        uses: actions/upload-artifact@master
        with:
          name: rust_cat.exe
          path: target/release/rust_cat.exe
      - name: Hash upload
        uses: actions/upload-artifact@master
        with:
          name: hashes.txt
          path: hashes.txt
      - name: Publish archives and packages
        uses: softprops/action-gh-release@v1
        if: steps.is-release.outputs.IS_RELEASE
        with:
          files: |
            target/release/rust_cat.exe
            hashes.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
